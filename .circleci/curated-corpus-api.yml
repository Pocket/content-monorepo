workflows:
  curated-corpus-api:
    jobs:

      ######
      # Every PR Jobs
      ######
      - apollo:
          name: curated-corpus-api_apollo
          multiple_schema: true
          fed_graph_name: pocket-admin-api
          client_graph_name: pocket-client-api
          schema_file_path: servers/curated-corpus-api/schema-public.graphql
          shared_schema_file_path: servers/curated-corpus-api/schema-shared.graphql
          admin_schema_file_path: servers/curated-corpus-api/schema-admin.graphql
          graph_name: curated-corpus
          prod_graph_url: https://curated-corpus-api.readitlater.com
          dev_graph_url: https://curated-corpus-api.getpocket.dev
          apollo_key_env: ADMIN_APOLLO_KEY

      - test_integrations:
          <<: *not_dev_main
          for: curated_corpus_api
          context: pocket
          name: curated-corpus-api_test_integrations
          scope: curated-corpus-api
          run_prisma_jobs: true

      # Try building the ECS docker image on each branch
      - build_image:
          <<: *not_dev_main
          context: pocket
          for: curated_corpus_api
          name: curated_corpus_api_build_docker
          run_prisma_jobs: true
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          repo-name: curatedcorpusapi-dev-app
          ecr-url: 410318598490.dkr.ecr.us-east-1.amazonaws.com
          push: false
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=curated-corpus-api --build-arg PORT=4025

      - infrastructure:
          <<: *not_dev_main
          context: pocket
          for: curated_corpus_api
          name: curated-corpus-api_infrastructure_plan_prod
          scope: curated-corpus-api-cdk
          stack-output-path: infrastructure/curated-corpus-api/cdktf.out/stacks/curated-corpus-api
          resource-class: pocket/default-prod
          workspace: Prod
          dev: false
          apply: false

      ######
      # Dev Branch Deployment (Dev Environment)
      ######

      - infrastructure:
          <<: *only_dev
          context: pocket
          for: curated_corpus_api
          name: curated-corpus-api_infrastructure_apply_dev
          scope: curated-corpus-api-cdk
          stack-output-path: infrastructure/curated-corpus-api/cdktf.out/stacks/curated-corpus-api
          resource-class: pocket/default-dev
          workspace: Dev
          apply: true
          dev: true

      # Build & Deploy the Dev Docker Image
      - build_image:
          <<: *only_dev
          context: pocket
          for: curated_corpus_api
          name: curated-corpus-api_build_docker_dev
          run_prisma_jobs: true
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          repo-name: curatedcorpusapi-dev-app
          ecr-url: 410318598490.dkr.ecr.us-east-1.amazonaws.com
          push: true
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=curated-corpus-api --build-arg PORT=4025
          requires:
            - curated-corpus-api_infrastructure_apply_dev

      - code_deploy_ecs:
          <<: *only_dev
          context: pocket
          for: curated_corpus_api
          name: curated-corpus-api_code_deploy_ecs_dev
          resource-class: pocket/default-dev
          codedeploy-app-name: CuratedCorpusAPI-Dev-ECS
          codedeploy-group-name: CuratedCorpusAPI-Dev-ECS
          requires:
            - curated-corpus-api_build_docker_dev

      # Notify sentry of dev deployment
      - sentry_release_notification:
          <<: *only_dev
          name: curated-corpus-api_sentry-release-notification-dev
          context: pocket
          for: curated_corpus_api
          sentry_project_name: curated-corpus-api
          sentry_env: development
          sentry_org: pocket
          requires:
            - curated-corpus-api_code_deploy_ecs_dev

      # Setup params we may use in Lambdas
      - setup_deploy_params:
          <<: *only_dev
          name: curated-corpus-api_deploy-params-dev
          aws_access_key_id: Dev_AWS_ACCESS_KEY
          aws_secret_access_key: Dev_AWS_SECRET_ACCESS_KEY
          context: pocket
          env: Dev
          service_name: CuratedCorpusAPI
          requires:
            - curated-corpus-api_code_deploy_ecs_dev

      ######
      # Main Branch Deployment (Prod Environment)
      ######
      - infrastructure:
            <<: *only_main
            context: pocket
            for: curated_corpus_api
            name: curated-corpus-api_infrastructure_apply_prod
            scope: curated-corpus-api-cdk
            stack-output-path: infrastructure/curated-corpus-api/cdktf.out/stacks/curated-corpus-api
            resource-class: pocket/default-prod
            workspace: Prod
            apply: true
            dev: false

          # Build & Deploy the Prod Docker Image
      - build_image:
            <<: *only_main
            context: pocket
            for: curated_corpus_api
            name: curated-corpus-api_build_docker_prod
            run_prisma_jobs: true
            aws-access-key-id: Prod_AWS_ACCESS_KEY
            aws-secret-access-key: Prod_AWS_SECRET_ACCESS_KEY
            aws-region: Prod_AWS_DEFAULT_REGION
            repo-name: curatedcorpusapi-prod-app
            ecr-url: 996905175585.dkr.ecr.us-east-1.amazonaws.com
            push: true
            extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=curated-corpus-api --build-arg PORT=4025
            requires:
                - curated-corpus-api_infrastructure_apply_prod

      - code_deploy_ecs:
            <<: *only_main
            context: pocket
            for: curated_corpus_api
            name: curated-corpus-api_code_deploy_ecs_prod
            resource-class: pocket/default-prod
            codedeploy-app-name: CuratedCorpusAPI-Prod-ECS
            codedeploy-group-name: CuratedCorpusAPI-Prod-ECS
            requires:
                - curated-corpus-api_build_docker_prod

      # Notify sentry of main deployment
      - sentry_release_notification:
            <<: *only_main
            name: curated-corpus-api_sentry-release-notification-prod
            context: pocket
            for: curated_corpus_api
            sentry_project_name: curated-corpus-api
            sentry_env: production
            sentry_org: pocket
            requires:
                - curated-corpus-api_code_deploy_ecs_prod

          # Setup params we may use in Lambdas
      - setup_deploy_params:
            <<: *only_main
            name: curated-corpus-api_deploy-params-prod
            aws_access_key_id: Prod_AWS_ACCESS_KEY
            aws_secret_access_key: Prod_AWS_SECRET_ACCESS_KEY
            context: pocket
            env: Prod
            service_name: CuratedCorpusAPI
            requires:
                - curated-corpus-api_code_deploy_ecs_prod
