scalar Upload

"""
The outcome of the curators reviewing a prospective story.
"""
enum CuratedStatus {
  """
  Recommend this story for Pocket users. This is first-tier content.
  """
  RECOMMENDATION
  """
  This story is suitable for our curated corpus. It's a second-tier recommendation.
  """
  CORPUS
}

"""
Options for returning items sorted by the supplied field.
"""
enum OrderBy {
  """
  Return items in ascending order.
  """
  ASC
  """
  Return items in descending order.
  """
  DESC
}

"""
The list of Pocket topics. This enum is not used anywhere in this schema, however it is used
by the Curation Admin Tools frontend to edit curated items.
"""
enum Topics {
  BUSINESS
  CAREER
  CORONAVIRUS
  EDUCATION
  ENTERTAINMENT
  FOOD
  GAMING
  HEALTH_FITNESS
  HOME
  PARENTING
  PERSONAL_FINANCE
  POLITICS
  SCIENCE
  SELF_IMPROVEMENT
  SPORTS
  TECHNOLOGY
  TRAVEL
}

"""
Possible reasons for rejecting a prospect. This enum is not used anywhere in this schema,
however it is used by the Curation Admin Tools frontend to specify rejection reasons.
"""
enum RejectionReason {
  PAYWALL
  POLITICAL_OPINION
  OFFENSIVE_MATERIAL
  TIME_SENSITIVE
  MISINFORMATION
  PUBLISHER_QUALITY
  PUBLISHER_REQUEST
  COMMERCIAL
  OTHER
}

"""
2024-01-29

these reasons are used when dismissing prospects only for the
SLATE_SCHEDULE_V2 prospect type. this is a preliminary step towards ML
scheduling items, and this reason set will *likely* be used when removing ML
scheduled items as well.

these reasons *may* also be used more widely in the prospecting view in the
future, but would be blocked on removal count going down significantly.

As of today, 2024-01-29, these reasons have been finalized.
1.31.2024 - Reasons have been modified (https://docs.google.com/spreadsheets/d/1HWLpoiKh-CPXkMKrfHKBSohrR8C8o0StcMucF0C0vEk)
"""
enum RemovalReason {
  ARTICLE_QUALITY
  COMMERCIAL
  CONTROVERSIAL
  HED_DEK_QUALITY
  IMAGE_QUALITY
  NICHE
  NO_IMAGE
  ONE_SIDED
  PARTISAN
  PAYWALL
  PUBLISH_DATE
  PUBLISHER_DIVERSITY
  PUBLISHER_QUALITY
  SET_DIVERSITY
  TIME_SENSITIVE
  TOPIC_DIVERSITY
}

"""
Reasons for removing SectionItems from ML Sections.

This is used by ML downstream to improve their modeling.
"""
enum SectionItemRemovalReason {
  ARTICLE_QUALITY
  CONTROVERSIAL
  DATED
  HED_DEK_QUALITY
  IMAGE_QUALITY
  NO_IMAGE
  OFF_TOPIC
  ONE_SIDED
  PAYWALL
  PUBLISHER_QUALITY
  SET_DIVERSITY
  OTHER
  ML
}

"""
Represents the current Section status, computed dynamically.
"""
enum SectionStatus {
  SCHEDULED
  DISABLED
  LIVE
  EXPIRED
}

"""
Reasons for manually scheduling a corpus item.

This is used by ML downstream to improve their modeling.
"""
enum ManualScheduleReason {
  EVERGREEN
  FORMAT_DIVERSITY
  PUBLISHER_DIVERSITY
  TIME_SENSITIVE_EXPLAINER
  TIME_SENSITIVE_NEWS
  TOPIC_DIVERSITY
  TRENDING
  UNDER_THE_RADAR
}

"""
Prospect types. This enum is not used anywhere in this schema, however it is used
by the Curation Admin Tools frontend to filter prospects.
"""
enum ProspectType {
  COUNTS
  DISMISSED
  DOMAIN_ALLOWLIST
  PUBLISHER_SUBMITTED
  RECOMMENDED
  RSS_LOGISTIC
  RSS_LOGISTIC_RECENT
  SLATE_SCHEDULER_V2
  TIMESPENT
  TITLE_URL_MODELED
  TOP_SAVED
  QA_ENTERTAINMENT
  QA_SPORTS
  QA_MUSIC
  QA_MOVIES
  QA_BOOKS
  QA_CELEBRITY
  QA_TELEVISION
  QA_MLB
  QA_NFL
  QA_NBA
  QA_NHL
  QA_SOCCER
}

"""
The source of the corpus item
"""
enum CorpusItemSource {
  """
  Originated as a prospect in the curation admin tool
  """
  PROSPECT
  """
  Manually entered through the curation admin tool
  """
  MANUAL
  """
  Imported from the legacy database
  """
  BACKFILL
  """
  Created by ML
  """
  ML
}

"""
Indicates where in the Curation Tools UI the action took place
"""
enum ActionScreen {
  """
  This action took place from the prospecting screen in the admin tool
  """
  PROSPECTING
  """
  This action took place from the schedule screen in the admin tool
  """
  SCHEDULE
  """
  This action took place from the corpus screen in the admin tool
  """
  CORPUS
  """
  This action took place from the sections screen in the admin tool
  """
  SECTIONS
}

"""
A Scheduled Surface, including its associated Prospect Types.
"""
type ScheduledSurface {
  """
  The GUID of the Scheduled Surface. Example: 'NEW_TAB_EN_US'.
  """
  guid: String!
  """
  The display name of the Scheduled Surface. Example 'New Tab (en-US)'.
  """
  name: String!
  """
  The IANA timezone of the Scheduled Surface, used to determine the start of a day.
  """
  ianaTimezone: String!
  """
  An array of associated ProspectTypes.
  """
  prospectTypes: [ProspectType!]!
}

"""
A prospective story that has been reviewed by the curators and saved to the corpus.
"""
type ApprovedCorpusItem @key(fields: "url") {
  """
  An alternative primary key in UUID format that is generated on creation.
  """
  externalId: ID!
  """
  The GUID of the corresponding Prospect ID. Will be empty if the item was manually added.
  """
  prospectId: ID
  """
  The URL of the story.
  """
  url: Url!
  """
  True if the domain of the corpus item has been scheduled in the past.
  """
  hasTrustedDomain: Boolean!
  """
  The title of the story.
  """
  title: String!
  """
  The excerpt of the story.
  """
  excerpt: String!
  """
  The authors associated with this ApprovedCorpusItem.
  """
  authors: [CorpusItemAuthor!]!
  """
  The outcome of the curators' review.
  """
  status: CuratedStatus!
  """
  What language this story is in. This is a two-letter code, for example, 'EN' for English.
  """
  language: CorpusLanguage!
  """
  The name of the online publication that published this story.
  """
  publisher: String!
  """
  The publication date for this story.
  """
  datePublished: Date
  """
  The image URL associated with the story.
  This is a link to an S3 bucket - the image will have been pre-uploaded to S3 before saving a curated item.
  """
  imageUrl: Url!
  """
  A topic this story best fits in.
  Temporarily a string value that will be provided by Prospect API, possibly an enum in the future.
  """
  topic: String!
  """
  The source of the corpus item.
  """
  source: CorpusItemSource!
  """
  Whether this story is a Pocket Collection.
  """
  isCollection: Boolean!
  """
  Experimental data point that could imply either an expiry date or an urgency to be shown.
  May be used for ML modeling.
  """
  isTimeSensitive: Boolean!
  """
  Whether this item is a syndicated article.
  """
  isSyndicated: Boolean!
  """
  A Unix timestamp of when the entity was created.
  """
  createdAt: Int!
  """
  A single sign-on user identifier of the user who created this entity.
  """
  createdBy: String!
  """
  A Unix timestamp of when the entity was last updated.
  """
  updatedAt: Int!
  """
  A single sign-on user identifier of the user who last updated this entity. Null on creation.
  """
  updatedBy: String
  """
  Subquery to get the log of scheduled entries to display for a given Approved Item, most recent first.
  """
  scheduledSurfaceHistory(
    filters: ApprovedCorpusItemScheduledSurfaceHistoryFilters
  ): [ApprovedCorpusItemScheduledSurfaceHistory!]!
}

"""
A prospective story that has been rejected by the curators.
"""
type RejectedCorpusItem @key(fields: "url") {
  """
  An alternative primary key in UUID format that is generated on creation.
  """
  externalId: ID!
  """
  The GUID of the corresponding Prospect ID. Will be empty if the item was manually added.
  """
  prospectId: ID
  """
  The URL of the story.
  """
  url: Url!
  """
  The title of the story.
  """
  title: String
  """
  A topic this story best fits in.
  Temporarily a string value that will be provided by Prospect API, possibly an enum in the future.
  """
  topic: String
  """
  What language this story is in. This is a two-letter code, for example, 'EN' for English.
  """
  language: CorpusLanguage
  """
  The name of the online publication that published this story.
  """
  publisher: String
  """
  Reason why it was rejected. Can be multiple reasons. Will likely be stored either as comma-separated values or JSON.
  """
  reason: String!
  """
  A Unix timestamp of when the entity was created.
  """
  createdAt: Int!
  """
  A single sign-on user identifier of the user who created this entity.
  """
  createdBy: String!
}

"""
An edge in a connection.
"""
type ApprovedCorpusItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!
  """
  The Approved Item at the end of the edge.
  """
  node: ApprovedCorpusItem!
}

type ApprovedCorpusImageUrl {
  """
  The url of the image stored in the s3 bucket
  """
  url: String!
}

"""
An edge in a connection for RejectedCorpusItem type.
"""
type RejectedCorpusItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!
  """
  The Rejected Item at the end of the edge.
  """
  node: RejectedCorpusItem!
}

"""
The connection type for Approved Item.
"""
type ApprovedCorpusItemConnection {
  """
  A list of edges.
  """
  edges: [ApprovedCorpusItemEdge!]!
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of Approved Items in the connection.
  """
  totalCount: Int!
}

"""
The connection type for Rejected Item.
"""
type RejectedCorpusItemConnection {
  """
  A list of edges.
  """
  edges: [RejectedCorpusItemEdge!]!
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of Rejected Curated Items in the connection.
  """
  totalCount: Int!
}

"""
A scheduled entry for an Approved Item to appear on a Scheduled Surface.
For example, a story that is scheduled to appear on December 31st, 2021 on the New Tab in Firefox for the US audience.
"""
type ScheduledCorpusItem {
  """
  An alternative primary key in UUID format that is generated on creation.
  """
  externalId: ID!
  """
  A Unix timestamp of when the entity was created.
  """
  createdAt: Int!
  """
  A single sign-on user identifier of the user who created this entity.
  """
  createdBy: String!
  """
  A Unix timestamp of when the entity was last updated.
  """
  updatedAt: Int!
  """
  A single sign-on user identifier of the user who last updated this entity. Null on creation.
  """
  updatedBy: String
  """
  The date the associated Approved Item is scheduled to appear on a Scheduled Surface.
  This date is relative to the time zone of the Scheduled Surface. Format: YYYY-MM-DD.
  """
  scheduledDate: Date!
  """
  The associated Approved Item.
  """
  approvedItem: ApprovedCorpusItem!
  """
  The GUID of this scheduledSurface to which this item is scheduled. Example: 'NEW_TAB_EN_US'.
  """
  scheduledSurfaceGuid: ID!
  """
  Source of the Scheduled Item. Could be one of: MANUAL or ML
  """
  source: ActivitySource!
}

"""
The shape of the result returned by the getScheduledCorpusItems query.
"""
type ScheduledCorpusItemsResult {
  """
  The date items are scheduled for, in YYYY-MM-DD format.
  """
  scheduledDate: Date!
  """
  The number of curated items that are collections for the scheduled date.
  """
  collectionCount: Int!
  """
  The number of syndicated articles for the scheduled date.
  """
  syndicatedCount: Int!
  """
  The total number of items for the scheduled date.
  """
  totalCount: Int!
  """
  The human review status of the schedule for the given scheduledSurfaceGuid & scheduledDate.
  """
  scheduleReview: ScheduleReview
  """
  An array of items for a given Scheduled Surface
  """
  items: [ScheduledCorpusItem!]!
}

"""
Contains information about the human curator who reviewed the schedule for a given date and scheduled surface.
"""
type ScheduleReview {
  """
  The GUID of the scheduledSurface that was reviewed.
  """
  scheduledSurfaceGuid: ID!
  """
  The date of the schedule that was reviewed, in YYYY-MM-DD format.
  """
  scheduledDate: Date!
  """
  A single sign-on user identifier of the user who reviewed the schedule.
  """
  reviewedBy: String!
  """
  A Unix timestamp of when the scheduled was last reviewed.
  """
  reviewedAt: Date!
}

"""
Input data for creating IAB metadata for a Section
"""
input IABMetadataInput {
  taxonomy: String!
  categories: [String!]!
}

"""
Input data for creating a Section
"""
input CreateOrUpdateSectionInput {
  """
  An alternative primary key in UUID format supplied by ML.
  """
  externalId: ID!
  """
  The title of the Section displayed to the users.
  """
  title: String!
  """
  The GUID of the Scheduled Surface. Example: 'NEW_TAB_EN_US'.
  """
  scheduledSurfaceGuid: ID!
  """
  Optional IAB metadata input
  """
  iab: IABMetadataInput
  """
  Controls the display order of Sections.
  """
  sort: Int
  """
  The source which created the Section.
  """
  createSource: ActivitySource!
  """
  Indicates whether or not a Section is available for display.
  """
  active: Boolean!
}

"""
Input data for disabling or enabling a Section
"""
input DisableEnableSectionInput {
  """
  An alternative primary key in UUID format supplied by ML.
  """
  externalId: ID!
  """
  Indicates whether or not a Section is fully disabled from display on NewTab. Can only  be controlled
  in the admin tool.
  """
  disabled: Boolean!
}

extend type Section {
  """
  Indicates whether or not a Section is fully disabled from display on NewTab. Can only  be controlled
  in the admin tool.
  """
  disabled: Boolean!
  """
  A Unix timestamp of when the Section was created.
  """
  createdAt: Int!
  """
  A Unix timestamp of when the Section was last updated.
  """
  updatedAt: Int!
  """
  The status of the Section.
  """
  status: SectionStatus
  """
  The start date for when the Section should be live.
  """
  startDate: Date
  """
  The date when the Section is expired.
  """
  endDate: Date
}

extend type SectionItem {
  """
  The associated Approved Corpus Item.
  """
  approvedItem: ApprovedCorpusItem!
  """
  A Unix timestamp of when the entity was created.
  """
  createdAt: Int!
  """
  A Unix timestamp of when the entity was last updated.
  """
  updatedAt: Int!
}

"""
Input data for adding a SectionItem to a Section
"""
input CreateSectionItemInput {
  """
  The ID of the ApprovedItem backing the SectionItem.
  """
  approvedItemExternalId: ID!
  """
  The ID of the Section to contain the new SectionItem.
  """
  sectionExternalId: ID!
  """
  The initial rank of the SectionItem in relation to its siblings. Used as a
  fallback in Merino when there is no engagement/click data available. May only apply to
  ML-generated SectionItems.
  """
  rank: Int
}

"""
Input data for removing a SectionItem
"""
input RemoveSectionItemInput {
  """
  ID of the SectionItem. A string in UUID format.
  """
  externalId: ID!
  """
  Array of reasons for removing a SectionItem.
  """
  deactivateReasons: [SectionItemRemovalReason!]!
  """
  Indicates which source deactivated the SectionItem.
  Optional; MANUAL if omitted
  """
  deactivateSource: ActivitySource
}

"""
Input data for updating a Custom Editorial Section
"""
input UpdateCustomSectionInput {
  """
  An alternative primary key in UUID format supplied by ML.
  """
  externalId: ID!
  """
  The title of the custom section displayed to the users.
  """
  title: String!
  """
  The description of the custom section displayed to the users.
  """
  description: String!
  """
  An optional title used in hero modules.
  """
  heroTitle: String
  """
  An optional description or supporting text for use in hero modules.
  """
  heroDescription: String
  """
  The date of when the Section should go "live" for display on NewTab.
  """
  startDate: Date!
  """
  An optional date of when the Section should stop being displayed.
  """
  endDate: Date
  """
  Optional IAB metadata input
  """
  iab: IABMetadataInput
  """
  The source which updated the Section.
  """
  updateSource: ActivitySource!
  """
  Controls the display order of Sections.
  """
  sort: Int
}

"""
Input data for creating a Custom Editorial Section
"""
input CreateCustomSectionInput {
  """
  The title of the custom section displayed to the users.
  """
  title: String!
  """
  The description of the custom section displayed to the users.
  """
  description: String!
  """
  An optional title used in hero modules.
  """
  heroTitle: String
  """
  An optional description or supporting text for use in hero modules.
  """
  heroDescription: String
  """
  The date of when the Section should go "live" for display on NewTab.
  Current & future dates allowed.
  Format: YYYY-MM-DD.
  """
  startDate: Date!
  """
  An optional date of when the Section should stop being displayed.
  Format: YYYY-MM-DD.
  """
  endDate: Date
  """
  The GUID of the Scheduled Surface. Example: 'NEW_TAB_EN_US'.
  """
  scheduledSurfaceGuid: ID!
  """
  Optional IAB metadata input
  """
  iab: IABMetadataInput
  """
  The source which created the Section.
  """
  createSource: ActivitySource!
  """
  Controls the display order of Sections.
  """
  sort: Int
  """
  Indicates whether or not a Section is available for display.
  """
  active: Boolean!
  """
  Indicates whether or not a Section is fully disabled from display on NewTab. Can only  be controlled
  in the admin tool.
  """
  disabled: Boolean!
}

"""
Input data for marking the given scheduled surface as reviewed
by human curators for a given date.
"""
input CreateScheduleReviewInput {
  """
  The GUID of the scheduledSurface that was reviewed.
  """
  scheduledSurfaceGuid: ID!
  """
  The date of the schedule that was reviewed, in YYYY-MM-DD format.
  """
  scheduledDate: Date!
}

"""
Available fields for filtering Approved Items.
"""
input ApprovedCorpusItemFilter {
  """
  Optional filter on the URL field. Returns partial matches.
  """
  url: Url
  """
  Optional filter on the title field. Returns partial matches.
  """
  title: String
  """
  Optional filter on the topic field.
  """
  topic: String
  """
  Optional filter on the status of Approved Items.
  """
  status: CuratedStatus
  """
  Optional filter on the language Approved Items have been classified as.
  This is a two-letter string, e.g. 'EN' for English or 'DE' for 'German'.
  """
  language: CorpusLanguage
}

type ApprovedCorpusItemScheduledSurfaceHistory {
  """
  An alternative primary key in UUID format that is generated on creation.
  Note: this is the external ID of the scheduled entry, not the approved item.
  """
  externalId: ID!
  """
  A single sign-on user identifier of the user who created this entry.
  """
  createdBy: String!
  """
  The date the associated Approved Item is scheduled to appear on a Scheduled Surface.
  This date is relative to the time zone of the Scheduled Surface. Format: YYYY-MM-DD.
  """
  scheduledDate: Date!
  """
  The GUID of the scheduledSurface to which the associated Approved Item is scheduled.
  Example: 'NEW_TAB_EN_US'.
  """
  scheduledSurfaceGuid: ID!
}

"""
Available fields for filtering an Approved Item's history of being scheduled onto one or more
scheduled surfaces.
"""
input ApprovedCorpusItemScheduledSurfaceHistoryFilters {
  """
  The maximum number of results to be returned. Default: 10.
  """
  limit: NonNegativeInt
  """
  The scheduled surface the results should be filtered to. Omitting this filter will
  fetch results from all scheduled surfaces.
  """
  scheduledSurfaceGuid: ID
}

"""
Available fields for filtering Rejected Items.
"""
input RejectedCorpusItemFilter {
  """
  Optional filter on the URL field. Returns partial matches.
  """
  url: Url
  """
  Optional filter on the title field. Returns partial matches.
  """
  title: String
  """
  Optional filter on the topic field.
  """
  topic: String
  """
  Optional filter on the language Rejected Curated Items have been classified as.
  This is a two-letter string, e.g. 'EN' for English or 'DE' for 'German'.
  """
  language: CorpusLanguage
}

"""
Available fields for filtering scheduled items for a given Scheduled Surface.
"""
input ScheduledCorpusItemsFilterInput {
  """
  The GUID of the Scheduled Surface. Example: 'NEW_TAB_EN_US'.
  """
  scheduledSurfaceGuid: ID!
  """
  Which day to show scheduled items from. Expects a date in YYYY-MM-DD format.
  """
  startDate: Date!
  """
  To what day to show scheduled items to, inclusive. Expects a date in YYYY-MM-DD format.
  """
  endDate: Date!
}

"""
An author associated with a CorpusItem.
"""
input CorpusItemAuthorInput {
  name: String!
  sortOrder: Int!
}

"""
Input data for creating an Approved Item and optionally scheduling this item to appear on a Scheduled Surface.
"""
input CreateApprovedCorpusItemInput {
  """
  The GUID of the corresponding Prospect ID. Will be empty for manually added items.
  """
  prospectId: ID
  """
  The URL of the Approved Item.
  """
  url: Url!
  """
  The title of the Approved Item.
  """
  title: String!
  """
  The excerpt of the Approved Item.
  """
  excerpt: String!
  """
  A name and sort order for each author.
  """
  authors: [CorpusItemAuthorInput!]!
  """
  The outcome of the curators' review of the Approved Item.
  """
  status: CuratedStatus!
  """
  What language this item is in. This is a two-letter code, for example, 'EN' for English.
  """
  language: CorpusLanguage!
  """
  The name of the online publication that published this story.
  """
  publisher: String!
  """
  The publication date for this story.
  """
  datePublished: Date
  """
  The image URL for this item's accompanying picture.
  """
  imageUrl: Url!
  """
  A topic this story best fits in.
  """
  topic: String!
  """
  The source of the corpus item.
  """
  source: CorpusItemSource!
  """
  Whether this story is a Pocket Collection.
  """
  isCollection: Boolean!
  """
  A flag to ML to not recommend this item long term after it is added to the corpus.
  Example: a story covering an election, or "The best of 202x" collection.
  """
  isTimeSensitive: Boolean!
  """
  Whether this item is a syndicated article.
  """
  isSyndicated: Boolean!
  """
  Optionally, specify the date this item should be appearing on a Scheduled Surface. Format: YYYY-MM-DD
  """
  scheduledDate: Date
  """
  Optionally, specify the GUID of the Scheduled Surface this item should be scheduled for.
  """
  scheduledSurfaceGuid: ID
  """
  Optionally, specify the source of the Scheduled Item. Could be one of: MANUAL or ML
  """
  scheduledSource: ActivitySource
  """
  The UI screen where the approved corpus item is being created from.
  """
  actionScreen: ActionScreen
}

"""
Input data for updating an Approved Item.
"""
input UpdateApprovedCorpusItemInput {
  """
  Approved Item ID.
  """
  externalId: ID!
  """
  The title of the Approved Item.
  """
  title: String!
  """
  The excerpt of the Approved Item.
  """
  excerpt: String!
  """
  A name and sort order for each author.
  """
  authors: [CorpusItemAuthorInput!]!
  """
  The outcome of the curators' review of the Approved Item.
  """
  status: CuratedStatus!
  """
  What language this item is in. This is a two-letter code, for example, 'EN' for English.
  """
  language: CorpusLanguage!
  """
  The name of the online publication that published this story.
  """
  publisher: String!
  """
  The publication date for this story.
  """
  datePublished: Date
  """
  The image URL for this item's accompanying picture.
  """
  imageUrl: Url!
  """
  A topic this story best fits in.
  """
  topic: String!
  """
  A flag to ML to not recommend this item long term after it is added to the corpus.
  Example: a story covering an election, or "The best of 202x" collection.
  """
  isTimeSensitive: Boolean!
  """
  The UI screen where the approved corpus item is being updated from.
  Can be on the corpus screen or the schedule screen.
  """
  actionScreen: ActionScreen
}

"""
Input data for rejecting an Approved Item.
"""
input RejectApprovedCorpusItemInput {
  """
  Approved Item ID.
  """
  externalId: ID!
  """
  A comma-separated list of rejection reasons.
  """
  reason: String!
  """
  The UI screen where the approved corpus item is being rejected from.
  Can be the schedule screen or the corpus screen.
  """
  actionScreen: ActionScreen
}

"""
Input data for creating a Rejected Item.
"""
input CreateRejectedCorpusItemInput {
  """
  The GUID of the corresponding Prospect ID. Will be empty for manually added item.
  """
  prospectId: ID
  """
  The URL of the Rejected Item.
  """
  url: Url!
  """
  The title of the Rejected Item.
  """
  title: String
  """
  A topic this story best fits in.
  Temporarily a string value that will be provided by Prospect API, possibly an enum in the future.
  """
  topic: String!
  """
  What language this item is in. This is a two-letter code, for example, 'EN' for English.
  """
  language: CorpusLanguage
  """
  The name of the online publication that published this story.
  """
  publisher: String
  """
  A comma-separated list of rejection reasons.
  """
  reason: String!
  """
  The UI screen where the rejected corpus item is being created from.
  Currently only available on prospect screen.
  """
  actionScreen: ActionScreen
}

"""
Input data for creating a scheduled entry for an Approved Item on a Scheduled Surface.
"""
input CreateScheduledCorpusItemInput {
  """
  The ID of the Approved Item that needs to be scheduled.
  """
  approvedItemExternalId: ID!
  """
  The GUID of the Scheduled Surface the Approved Item is going to appear on. Example: 'NEW_TAB_EN_US'.
  """
  scheduledSurfaceGuid: ID!
  """
  The date the associated Approved Item is scheduled to appear on a Scheduled Surface. Format: YYYY-MM-DD.
  """
  scheduledDate: Date!
  """
  Source of the Scheduled Item. Could be one of: MANUAL or ML
  """
  source: ActivitySource!
  """
  A comma-separated list of reasons for manually scheduling an item. Helps ML improve models for sets of scheduled items.
  """
  reasons: String
  """
  Free-text entered by the curator to give further detail to the manual schedule reason(s) provided.
  """
  reasonComment: String
  """
  The UI screen where the scheduled corpus item is being created from.
  Can be from the prospecting, corpus, or schedule screens.
  """
  actionScreen: ActionScreen
}

"""
Input data for rescheduling a scheduled item for a Scheduled Surface.
"""
input RescheduleScheduledCorpusItemInput {
  """
  ID of the scheduled item. A string in UUID format.
  """
  externalId: ID!
  """
  The new scheduled date for the scheduled item to appear on a Scheduled Surface. Format: YYYY-MM-DD.
  """
  scheduledDate: Date!
  """
  Source of the Scheduled Item. Could be one of: MANUAL or ML
  """
  source: ActivitySource!
  """
  The UI screen where the scheduled corpus item is being resceduled from.
  Can only be from the schedule screen.
  """
  actionScreen: ActionScreen
}

"""
Input data for deleting a scheduled item for a Scheduled Surface.
"""
input DeleteScheduledCorpusItemInput {
  """
  ID of the scheduled item. A string in UUID format.
  """
  externalId: ID!
  """
  A comma-separated list of unschedule reasons.
  """
  reasons: String
  """
  Free-text entered by the curator to give further detail to the reason(s) provided.
  """
  reasonComment: String
  """
  The UI screen where the scheduled corpus item is being deleted from.
  Can only be from the schedule screen.
  """
  actionScreen: ActionScreen
}

type Query {
  """
  Retrieves a paginated, filterable list of Approved Items.
  """
  getApprovedCorpusItems(
    filters: ApprovedCorpusItemFilter
    pagination: PaginationInput
  ): ApprovedCorpusItemConnection!

  """
  Retrieves a paginated, filterable list of Rejected Items.
  """
  getRejectedCorpusItems(
    filters: RejectedCorpusItemFilter
    pagination: PaginationInput
  ): RejectedCorpusItemConnection!

  """
  Retrieves a list of Approved Items that are scheduled to appear on a Scheduled Surface.
  """
  getScheduledCorpusItems(
    """
    Required arguments to narrow down scheduled items to a specific Scheduled Surface
    between the supplied start and end dates.
    """
    filters: ScheduledCorpusItemsFilterInput!
  ): [ScheduledCorpusItemsResult!]!

  """
  Retrieves an approved item with the given URL.
  """
  getApprovedCorpusItemByUrl(
    """
    The URL of the approved item.
    """
    url: String!
  ): ApprovedCorpusItem

  """
  Retrieves an approved item with the given external ID.
  """
  approvedCorpusItemByExternalId(
    """
    ID of the approved item. A string in UUID format.
    """
    externalId: ID!
  ): ApprovedCorpusItem

  """
  Retrieves all ScheduledSurfaces available to the given SSO user. Requires an Authorization header.
  """
  getScheduledSurfacesForUser: [ScheduledSurface!]!

  """
  Tool to get OG description of URL that is not yet implemented in parser
  """
  getOpenGraphFields(url: Url!): OpenGraphFields

  """
  Retrieves a list of active and enabled/disabled Sections with their corresponding active SectionItems for a scheduled surface.
  """
  getSectionsWithSectionItems(scheduledSurfaceGuid: ID!): [Section!]!
}

type Mutation {
  """
  Creates an Approved Item and optionally schedules it to appear on a Scheduled Surface.
  """
  createApprovedCorpusItem(
    data: CreateApprovedCorpusItemInput!
  ): ApprovedCorpusItem!

  """
  Creates a Rejected Item.
  """
  createRejectedCorpusItem(
    data: CreateRejectedCorpusItemInput!
  ): RejectedCorpusItem!

  """
  Updates an Approved Item.
  """
  updateApprovedCorpusItem(
    data: UpdateApprovedCorpusItemInput!
  ): ApprovedCorpusItem!

  """
  Rejects an Approved Item: deletes it from the corpus and creates a Rejected Item instead.
  Also deletes all associated SectionItems.
  """
  rejectApprovedCorpusItem(
    data: RejectApprovedCorpusItemInput!
  ): ApprovedCorpusItem!

  """
  Creates a Scheduled Surface Scheduled Item.
  """
  createScheduledCorpusItem(
    data: CreateScheduledCorpusItemInput!
  ): ScheduledCorpusItem!

  """
  Deletes an item from a Scheduled Surface.
  """
  deleteScheduledCorpusItem(
    data: DeleteScheduledCorpusItemInput!
  ): ScheduledCorpusItem!

  """
  Updates the scheduled date of a Scheduled Surface Scheduled Item.
  """
  rescheduleScheduledCorpusItem(
    data: RescheduleScheduledCorpusItemInput!
  ): ScheduledCorpusItem!

  """
  Uploads an image to S3 for an Approved Item
  """
  uploadApprovedCorpusItemImage(data: Upload!): ApprovedCorpusImageUrl!

  """
  Marks the given scheduled surface as reviewed by human curators for a given date.
  """
  createScheduleReview(data: CreateScheduleReviewInput!): ScheduleReview!

  """
  Creates a new Section entity. If a Section already exists, the existing
  Section gets updated, associated active SectionItems are set to in-active.
  This mutation is to be used by ML-automated processes.
  """
  createOrUpdateSection(data: CreateOrUpdateSectionInput!): Section!

  """
  Creates a SectionItem within a Section.
  """
  createSectionItem(data: CreateSectionItemInput!): SectionItem!

  """
  Removes an active SectionItem from a Section.
  """
  removeSectionItem(data: RemoveSectionItemInput!): SectionItem!

  """
  Disables or enables a Section. Can only be done from the admin tool.
  """
  disableEnableSection(data: DisableEnableSectionInput!): Section!

  """
  Creates a new custom editorial section entity.
  This mutation is to be used by curators via admin tool.
  """
  createCustomSection(data: CreateCustomSectionInput!): Section!

  """
  Updates an existing custom editorial section entity.
  This mutation is to be used by curators via admin tool.
  """
  updateCustomSection(data: UpdateCustomSectionInput!): Section!
}

"""
Represents an item that is in the Corpus and its associated manually edited metadata.
TODO: CorpusItem to implement PocketResource when it becomes available.
not actively required or consumed by admin subgraph
Only exposed here to avoid conflicts with other admin-subgraph when we extend the field
"""
type CorpusItem @key(fields: "url") {
  """
  The URL of the Approved Item.
  """
  url: Url!
}

type OpenGraphFields {
  description: String!
}
